/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.storymaker.view;

import com.mycompany.storymaker.controller.LevelSelector;
import com.mycompany.storymaker.controller.StoryBuilder;
import com.mycompany.storymaker.util.Music;
import com.mycompany.storymaker.util.Utilities;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import com.mycompany.storymaker.model.Story;
import com.mycompany.storymaker.model.StoryList;

/**
 *
 * @author sauru
 */
public class Ui extends javax.swing.JFrame {

    private LevelSelector levelSelector = new LevelSelector();
    private StoryBuilder storyBuilder = new StoryBuilder();
    private boolean exit = false; // it's true when the story ends
    private boolean isObjAct = false;
    private boolean signIn = false;
    private boolean storySelected = false;
    private User login = new User();
    StoryList storyList = new StoryList();
    private int storyId;
    private Music music;

    /**
     * Creates new form Ui
     */
    public Ui() {
        initComponents();
        frameNewStory.setVisible(false);
        frameLogin.setVisible(false);
        frameSelectStory.setVisible(false);
        frameNewStory.setLocationRelativeTo(null);
        frameLogin.setLocationRelativeTo(null);
        frameSelectStory.setLocationRelativeTo(null);
        dialogAbout.setLocationRelativeTo(null);

        textImput.setFocusable(false);
        areaOutput.setFocusable(false);
        areaOutput.setText(" * Welcome to Story Maker v. 1.0 * ");
        labelLogout.setVisible(false);
        textUsername.setText("");
        textEmail.setText("");
        textPassword.setText("");
        labelGif.setVisible(false);

        this.music = new Music();
        music.play();

        menuCheckAnimation.setSelected(true);
        menuCheckMusic.setSelected(true);

        areaOutput.setWrapStyleWord(true);
        areaOutput.setLineWrap(true);

        textSelectDescr.setWrapStyleWord(true);
        textSelectDescr.setLineWrap(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameNewStory = new javax.swing.JFrame();
        tabPanelNew = new javax.swing.JTabbedPane();
        tabIntro = new javax.swing.JPanel();
        labelIntro = new javax.swing.JLabel();
        scrollLabelIntro = new javax.swing.JScrollPane();
        textNewStoryIntro = new javax.swing.JTextArea();
        tabLevel = new javax.swing.JPanel();
        labelRoomName = new javax.swing.JLabel();
        labelObjActName = new javax.swing.JLabel();
        labelObjActDescr = new javax.swing.JLabel();
        textCharName = new javax.swing.JTextField();
        labelRoomDescr = new javax.swing.JLabel();
        labelCharDescr = new javax.swing.JLabel();
        labelObjPsvName = new javax.swing.JLabel();
        labelObjPsvDescr = new javax.swing.JLabel();
        labelCharName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textObjActDescr = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textCharDescr = new javax.swing.JTextArea();
        textRoomName = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        textRoomDescr = new javax.swing.JTextArea();
        textObjActName = new javax.swing.JTextField();
        textObjPsvName = new javax.swing.JTextField();
        scrollTextObjPsvDescr = new javax.swing.JScrollPane();
        textObjPsvDescr = new javax.swing.JTextArea();
        labelObjActAlias = new javax.swing.JLabel();
        textObjActAlias = new javax.swing.JTextField();
        labelObjPsvAlias = new javax.swing.JLabel();
        textObjPsvAlias = new javax.swing.JTextField();
        buttonAddRoom = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        labelObjPsvCmdAlias = new javax.swing.JLabel();
        textObjPsvCmdAlias = new javax.swing.JTextField();
        tabDescription = new javax.swing.JPanel();
        textTitle = new javax.swing.JTextField();
        labelTitle = new javax.swing.JLabel();
        labelStoryOnline = new javax.swing.JLabel();
        scrollTextStoryDescr = new javax.swing.JScrollPane();
        textStoryDescr = new javax.swing.JTextArea();
        buttonConfirmStory = new javax.swing.JButton();
        labelStoryDescr = new javax.swing.JLabel();
        checkStoryOnline = new javax.swing.JCheckBox();
        frameLogin = new javax.swing.JFrame();
        labelUsername = new javax.swing.JLabel();
        labelPassword = new javax.swing.JLabel();
        textPassword = new javax.swing.JPasswordField();
        textUsername = new javax.swing.JTextField();
        buttonLogin = new javax.swing.JButton();
        labelEmail = new javax.swing.JLabel();
        textEmail = new javax.swing.JTextField();
        labelLogin = new javax.swing.JLabel();
        labelSign = new javax.swing.JLabel();
        frameSelectStory = new javax.swing.JFrame();
        labelSelectStory = new javax.swing.JLabel();
        buttonSelectStory = new javax.swing.JButton();
        panelSelectStory = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        listSelectStory = new javax.swing.JList<>();
        panelViewSelectStory = new javax.swing.JPanel();
        labelSelectTitle = new javax.swing.JLabel();
        labelviewTitle = new javax.swing.JLabel();
        labelViewScore = new javax.swing.JLabel();
        labelSelectScore = new javax.swing.JLabel();
        labelViewDate = new javax.swing.JLabel();
        labelSelectDate = new javax.swing.JLabel();
        labelViewAuthor = new javax.swing.JLabel();
        labelSelectAuthor = new javax.swing.JLabel();
        labelViewDescr = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        textSelectDescr = new javax.swing.JTextArea();
        dialogSelectScore = new javax.swing.JDialog();
        jSlider1 = new javax.swing.JSlider();
        jLabel31 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        dialogScore = new javax.swing.JDialog();
        labelScore = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jScrollPane11 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        dialogAbout = new javax.swing.JDialog();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        panelPrincipal = new javax.swing.JPanel();
        panelNorth = new javax.swing.JPanel();
        panelLogout = new javax.swing.JPanel();
        labelLogout = new javax.swing.JLabel();
        scrollAreaOutput = new javax.swing.JScrollPane();
        areaOutput = new javax.swing.JTextArea();
        panelMiddle = new javax.swing.JPanel();
        labelGif = new javax.swing.JLabel();
        panelInput = new javax.swing.JPanel();
        textImput = new javax.swing.JTextField();
        menuBar = new javax.swing.JMenuBar();
        menuStory = new javax.swing.JMenu();
        menuLogin = new javax.swing.JMenuItem();
        menuNew = new javax.swing.JMenuItem();
        menuLoad = new javax.swing.JMenuItem();
        menuScore = new javax.swing.JMenuItem();
        menuSettings = new javax.swing.JMenu();
        menuCheckMusic = new javax.swing.JCheckBoxMenuItem();
        menuCheckAnimation = new javax.swing.JCheckBoxMenuItem();
        menuAbout = new javax.swing.JMenu();

        frameNewStory.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameNewStory.setLocationByPlatform(true);
        frameNewStory.setSize(new java.awt.Dimension(900, 750));

        tabPanelNew.setFont(new java.awt.Font("Source Code Pro", 0, 14)); // NOI18N
        tabPanelNew.setName(""); // NOI18N

        labelIntro.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        labelIntro.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelIntro.setText("CREATE YOUR STORY");

        textNewStoryIntro.setBackground(new java.awt.Color(102, 102, 102));
        textNewStoryIntro.setColumns(20);
        textNewStoryIntro.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        textNewStoryIntro.setForeground(new java.awt.Color(255, 255, 255));
        textNewStoryIntro.setRows(5);
        textNewStoryIntro.setText("With story maker you can create your own text adventure. \nImagine dividing your story into different levels and each level has rooms, \ncharacters, active and passive objects.\n\nROOM\nit is mandatory to enter a room, each time you go back and forth through the\nrooms the name and description of the room appears.\n\nCHARACTER\nEach room can optionally contain one character.\nIn game with the command \"talk\" you get the description of the character in \noutput.\n\nOBJECT ACTIVE\nIn game with the command \"observe\" the description of the active object is shown.\nEach room can optionally contain one active object.\nAn active item is used on a passive item to pass the level. Each level can \ncontain more than one active object. Each inserted active object must be used \nwith the passive object.\n\nOBJECT PASSIVE\nIn game with the command \"observe\" the description of the passive object is\nshown. Each level must contain only one passive object.\nThe passive object blocks the passage to the next level room if there is one.\nTo pass the level or complete the game, if active items have been inserted, both \nactive and passive items must be used. \nWhile if no active objects have been inserted, just use the active object only.\n\nEach time you click on \"add room\", a room is added to the level. \nBut if you insert a passive object the level is built.");
        textNewStoryIntro.setFocusable(false);
        scrollLabelIntro.setViewportView(textNewStoryIntro);

        javax.swing.GroupLayout tabIntroLayout = new javax.swing.GroupLayout(tabIntro);
        tabIntro.setLayout(tabIntroLayout);
        tabIntroLayout.setHorizontalGroup(
            tabIntroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabIntroLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(tabIntroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelIntro, javax.swing.GroupLayout.DEFAULT_SIZE, 732, Short.MAX_VALUE)
                    .addComponent(scrollLabelIntro))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        tabIntroLayout.setVerticalGroup(
            tabIntroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabIntroLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollLabelIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 563, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(300, Short.MAX_VALUE))
        );

        tabPanelNew.addTab("Intro", tabIntro);

        labelRoomName.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelRoomName.setText("Room name");

        labelObjActName.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjActName.setText("Object active name");

        labelObjActDescr.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjActDescr.setText("Object active description");

        labelRoomDescr.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelRoomDescr.setText("Room description");

        labelCharDescr.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelCharDescr.setText("Character description");

        labelObjPsvName.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjPsvName.setText("Object passive name");

        labelObjPsvDescr.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjPsvDescr.setText("Object passive description");

        labelCharName.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelCharName.setText("Character name");

        textObjActDescr.setColumns(20);
        textObjActDescr.setRows(5);
        jScrollPane1.setViewportView(textObjActDescr);

        textCharDescr.setColumns(20);
        textCharDescr.setRows(5);
        jScrollPane2.setViewportView(textCharDescr);

        textRoomDescr.setColumns(20);
        textRoomDescr.setRows(5);
        jScrollPane3.setViewportView(textRoomDescr);

        textObjPsvDescr.setColumns(20);
        textObjPsvDescr.setRows(5);
        scrollTextObjPsvDescr.setViewportView(textObjPsvDescr);

        labelObjActAlias.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjActAlias.setText("Object active alias");

        labelObjPsvAlias.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjPsvAlias.setText("Object passive alias");

        buttonAddRoom.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        buttonAddRoom.setText("ADD ROOM");
        buttonAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRoomButton(evt);
            }
        });

        labelObjPsvCmdAlias.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelObjPsvCmdAlias.setText("Object passive command alias");

        javax.swing.GroupLayout tabLevelLayout = new javax.swing.GroupLayout(tabLevel);
        tabLevel.setLayout(tabLevelLayout);
        tabLevelLayout.setHorizontalGroup(
            tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabLevelLayout.createSequentialGroup()
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabLevelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(labelCharDescr, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                            .addComponent(labelCharName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textCharName, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 578, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(tabLevelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(labelObjPsvCmdAlias, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelRoomName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelObjPsvDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjPsvAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjPsvName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjActDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjActAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjActName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelRoomDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabLevelLayout.createSequentialGroup()
                        .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(textObjActName, javax.swing.GroupLayout.DEFAULT_SIZE, 575, Short.MAX_VALUE)
                                .addComponent(textObjActAlias)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(tabLevelLayout.createSequentialGroup()
                        .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(textObjPsvCmdAlias)
                                .addComponent(textObjPsvAlias)
                                .addComponent(textObjPsvName, javax.swing.GroupLayout.DEFAULT_SIZE, 572, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                                .addComponent(textRoomName)
                                .addComponent(scrollTextObjPsvDescr, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)))
                        .addContainerGap(86, Short.MAX_VALUE))))
        );

        tabLevelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {textCharName, textObjActAlias, textObjActName, textObjPsvAlias, textObjPsvName, textRoomName});

        tabLevelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3, scrollTextObjPsvDescr});

        tabLevelLayout.setVerticalGroup(
            tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabLevelLayout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textRoomName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRoomDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCharName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textCharName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCharDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textObjActName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjActName, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textObjActAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjActAlias, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelObjActDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textObjPsvName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjPsvName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textObjPsvAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelObjPsvAlias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelObjPsvDescr)
                    .addComponent(scrollTextObjPsvDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabLevelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelObjPsvCmdAlias)
                    .addComponent(textObjPsvCmdAlias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(buttonAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(274, Short.MAX_VALUE))
        );

        tabLevelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelCharDescr, labelCharName, labelObjActAlias, labelObjActDescr, labelObjActName, labelObjPsvAlias, labelObjPsvDescr, labelObjPsvName, labelRoomDescr, labelRoomName});

        tabLevelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {textCharName, textObjActAlias, textObjActName, textObjPsvAlias, textObjPsvName, textRoomName});

        tabLevelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jScrollPane1, jScrollPane2, jScrollPane3, scrollTextObjPsvDescr});

        tabPanelNew.addTab("Level", tabLevel);

        labelTitle.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelTitle.setText("Title");

        labelStoryOnline.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelStoryOnline.setText("request to enter the story online");

        textStoryDescr.setColumns(20);
        textStoryDescr.setRows(5);
        scrollTextStoryDescr.setViewportView(textStoryDescr);

        buttonConfirmStory.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        buttonConfirmStory.setText("CONFIRM STORY");
        buttonConfirmStory.setToolTipText("");
        buttonConfirmStory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmStoryButton(evt);
            }
        });

        labelStoryDescr.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelStoryDescr.setText("Description");

        javax.swing.GroupLayout tabDescriptionLayout = new javax.swing.GroupLayout(tabDescription);
        tabDescription.setLayout(tabDescriptionLayout);
        tabDescriptionLayout.setHorizontalGroup(
            tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabDescriptionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabDescriptionLayout.createSequentialGroup()
                        .addComponent(labelStoryOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(checkStoryOnline, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonConfirmStory))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDescriptionLayout.createSequentialGroup()
                        .addComponent(labelStoryDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrollTextStoryDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDescriptionLayout.createSequentialGroup()
                        .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                        .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(91, 91, 91))
        );
        tabDescriptionLayout.setVerticalGroup(
            tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, tabDescriptionLayout.createSequentialGroup()
                .addGroup(tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(tabDescriptionLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonConfirmStory, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tabDescriptionLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addGroup(tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelTitle))
                        .addGap(37, 37, 37)
                        .addGroup(tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelStoryDescr)
                            .addComponent(scrollTextStoryDescr, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 179, Short.MAX_VALUE)
                        .addGroup(tabDescriptionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelStoryOnline)
                            .addComponent(checkStoryOnline))))
                .addGap(340, 340, 340))
        );

        tabPanelNew.addTab("Story description", tabDescription);

        frameNewStory.getContentPane().add(tabPanelNew, java.awt.BorderLayout.PAGE_START);
        tabPanelNew.getAccessibleContext().setAccessibleName("jFrame1");

        frameLogin.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameLogin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        frameLogin.setLocationByPlatform(true);
        frameLogin.setSize(new java.awt.Dimension(650, 550));

        labelUsername.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelUsername.setText("Username:");

        labelPassword.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelPassword.setText("Password:");
        labelPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        textPassword.setText("jPasswordField1");

        textUsername.setText("jTextField2");

        buttonLogin.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        buttonLogin.setText("OK");
        buttonLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginOkButton(evt);
            }
        });

        labelEmail.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        labelEmail.setText("Email:");

        textEmail.setText("jTextField3");

        labelLogin.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        labelLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelLogin.setText("LOGIN");

        labelSign.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        labelSign.setText("<HTML><U>SIGN-UP</U></HTML>");
        labelSign.setToolTipText("");
        labelSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                loginSwitchButton(evt);
            }
        });

        javax.swing.GroupLayout frameLoginLayout = new javax.swing.GroupLayout(frameLogin.getContentPane());
        frameLogin.getContentPane().setLayout(frameLoginLayout);
        frameLoginLayout.setHorizontalGroup(
            frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameLoginLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameLoginLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(labelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(215, Short.MAX_VALUE))
                    .addGroup(frameLoginLayout.createSequentialGroup()
                        .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(labelEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(labelUsername, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE))
                            .addComponent(labelSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(frameLoginLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(textPassword, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                            .addComponent(textUsername, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textEmail, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(60, 60, 60))))
        );
        frameLoginLayout.setVerticalGroup(
            frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameLoginLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(labelLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelUsername)
                    .addComponent(textUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPassword)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelEmail)
                    .addComponent(textEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(75, 75, 75)
                .addGroup(frameLoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        frameSelectStory.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        frameSelectStory.setLocationByPlatform(true);
        frameSelectStory.setMinimumSize(new java.awt.Dimension(1019, 593));
        frameSelectStory.setSize(new java.awt.Dimension(971, 630));

        labelSelectStory.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        labelSelectStory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelSelectStory.setText("CHOOSE YOUR STORY");

        buttonSelectStory.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        buttonSelectStory.setText("SELECT");
        buttonSelectStory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storySelectedConfirm(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        jButton5.setText("TITLE");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storySortedTitle(evt);
            }
        });
        panelSelectStory.add(jButton5);

        jButton6.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        jButton6.setText("AUTHOR");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storySortedAuthor(evt);
            }
        });
        panelSelectStory.add(jButton6);

        jButton7.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        jButton7.setText("SCORE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storySortedScore(evt);
            }
        });
        panelSelectStory.add(jButton7);

        jButton8.setFont(new java.awt.Font("Source Code Pro", 0, 12)); // NOI18N
        jButton8.setText("DATE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storySortedDate(evt);
            }
        });
        panelSelectStory.add(jButton8);

        listSelectStory.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                storyListSelected(evt);
            }
        });
        jScrollPane8.setViewportView(listSelectStory);

        panelViewSelectStory.setMaximumSize(new java.awt.Dimension(0, 0));

        labelSelectTitle.setMaximumSize(new java.awt.Dimension(430, 0));

        labelviewTitle.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        labelviewTitle.setText("Title:");

        labelViewScore.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        labelViewScore.setText("Score:");

        labelViewDate.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        labelViewDate.setText("Date:");

        labelViewAuthor.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        labelViewAuthor.setText("Author:");

        labelSelectAuthor.setMaximumSize(new java.awt.Dimension(430, 0));

        labelViewDescr.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        labelViewDescr.setText("Description:");

        textSelectDescr.setColumns(20);
        textSelectDescr.setRows(5);
        textSelectDescr.setFocusable(false);
        jScrollPane4.setViewportView(textSelectDescr);

        javax.swing.GroupLayout panelViewSelectStoryLayout = new javax.swing.GroupLayout(panelViewSelectStory);
        panelViewSelectStory.setLayout(panelViewSelectStoryLayout);
        panelViewSelectStoryLayout.setHorizontalGroup(
            panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewSelectStoryLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelViewAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelViewSelectStoryLayout.createSequentialGroup()
                        .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelViewScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelviewTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(labelViewDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(73, 73, 73))
                    .addComponent(labelViewDescr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelSelectScore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSelectDate, javax.swing.GroupLayout.DEFAULT_SIZE, 430, Short.MAX_VALUE)
                    .addComponent(labelSelectAuthor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSelectTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane4))
                .addGap(45, 45, 45))
        );
        panelViewSelectStoryLayout.setVerticalGroup(
            panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelViewSelectStoryLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelViewAuthor)
                    .addComponent(labelSelectAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSelectTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelviewTitle))
                .addGap(18, 18, 18)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelViewScore)
                    .addComponent(labelSelectScore, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelViewDate)
                    .addComponent(labelSelectDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelViewSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelViewDescr)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        panelViewSelectStoryLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {labelSelectAuthor, labelSelectDate, labelSelectScore, labelSelectTitle, labelViewAuthor, labelViewDate, labelViewDescr, labelViewScore, labelviewTitle});

        javax.swing.GroupLayout frameSelectStoryLayout = new javax.swing.GroupLayout(frameSelectStory.getContentPane());
        frameSelectStory.getContentPane().setLayout(frameSelectStoryLayout);
        frameSelectStoryLayout.setHorizontalGroup(
            frameSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameSelectStoryLayout.createSequentialGroup()
                .addGroup(frameSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSelectStory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSelectStory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameSelectStoryLayout.createSequentialGroup()
                        .addContainerGap(71, Short.MAX_VALUE)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(frameSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(buttonSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelViewSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)))
                .addContainerGap())
        );
        frameSelectStoryLayout.setVerticalGroup(
            frameSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameSelectStoryLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(labelSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(frameSelectStoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(panelViewSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(buttonSelectStory, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
        );

        dialogSelectScore.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogSelectScore.setSize(new java.awt.Dimension(450, 350));

        jSlider1.setFont(new java.awt.Font("Source Code Pro", 1, 12)); // NOI18N
        jSlider1.setMajorTickSpacing(1);
        jSlider1.setMaximum(10);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setPaintTrack(false);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(0);

        jLabel31.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("do you want to evaluate the adventure?");
        jLabel31.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jButton9.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        jButton9.setText("OK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scoreValueButton(evt);
            }
        });

        javax.swing.GroupLayout dialogSelectScoreLayout = new javax.swing.GroupLayout(dialogSelectScore.getContentPane());
        dialogSelectScore.getContentPane().setLayout(dialogSelectScoreLayout);
        dialogSelectScoreLayout.setHorizontalGroup(
            dialogSelectScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSelectScoreLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(dialogSelectScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        dialogSelectScoreLayout.setVerticalGroup(
            dialogSelectScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogSelectScoreLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel31)
                .addGap(55, 55, 55)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 85, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addGap(55, 55, 55))
        );

        dialogScore.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogScore.setSize(new java.awt.Dimension(400, 350));

        labelScore.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        labelScore.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelScore.setText("SCORE");

        jPanel8.setLayout(new java.awt.GridLayout(1, 0));

        jList2.setBorder(null);
        jScrollPane10.setViewportView(jList2);

        jPanel8.add(jScrollPane10);

        jList3.setBorder(null);
        jScrollPane11.setViewportView(jList3);

        jPanel8.add(jScrollPane11);

        javax.swing.GroupLayout dialogScoreLayout = new javax.swing.GroupLayout(dialogScore.getContentPane());
        dialogScore.getContentPane().setLayout(dialogScoreLayout);
        dialogScoreLayout.setHorizontalGroup(
            dialogScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogScoreLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addGroup(dialogScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE)
                    .addComponent(labelScore, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        dialogScoreLayout.setVerticalGroup(
            dialogScoreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogScoreLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(labelScore)
                .addGap(18, 18, 18)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        dialogAbout.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dialogAbout.setSize(new java.awt.Dimension(496, 374));

        jLabel34.setFont(new java.awt.Font("Source Code Pro", 1, 36)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("ABOUT");

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("Story maker vers. 1.0\ncreated by\nfrancesco pugliese\npino nicolò\nsimone giuseppe\n\nfor info or suggestions\nstorymaker2122@gmail.com\"");
        jTextArea3.setFocusable(false);
        jScrollPane9.setViewportView(jTextArea3);

        javax.swing.GroupLayout dialogAboutLayout = new javax.swing.GroupLayout(dialogAbout.getContentPane());
        dialogAbout.getContentPane().setLayout(dialogAboutLayout);
        dialogAboutLayout.setHorizontalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 424, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogAboutLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogAboutLayout.setVerticalGroup(
            dialogAboutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogAboutLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(147, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setSize(new java.awt.Dimension(900, 700));

        panelPrincipal.setLayout(new java.awt.GridLayout(0, 1));

        panelNorth.setBackground(new java.awt.Color(0, 0, 0));
        panelNorth.setLayout(new java.awt.BorderLayout());

        panelLogout.setBackground(new java.awt.Color(0, 0, 0));

        labelLogout.setBackground(new java.awt.Color(0, 0, 0));
        labelLogout.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        labelLogout.setForeground(new java.awt.Color(255, 255, 255));
        labelLogout.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        labelLogout.setText("<HTML><U>Logout</U>:</HTML>");
        labelLogout.setToolTipText("click to logout");
        labelLogout.setAutoscrolls(true);
        labelLogout.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        labelLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutClick(evt);
            }
        });

        javax.swing.GroupLayout panelLogoutLayout = new javax.swing.GroupLayout(panelLogout);
        panelLogout.setLayout(panelLogoutLayout);
        panelLogoutLayout.setHorizontalGroup(
            panelLogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLogoutLayout.createSequentialGroup()
                .addGap(0, 1048, Short.MAX_VALUE)
                .addComponent(labelLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        panelLogoutLayout.setVerticalGroup(
            panelLogoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLogoutLayout.createSequentialGroup()
                .addComponent(labelLogout, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        panelNorth.add(panelLogout, java.awt.BorderLayout.NORTH);

        areaOutput.setBackground(new java.awt.Color(0, 0, 0));
        areaOutput.setColumns(20);
        areaOutput.setFont(new java.awt.Font("Source Code Pro", 1, 14)); // NOI18N
        areaOutput.setForeground(new java.awt.Color(255, 255, 255));
        areaOutput.setRows(5);
        areaOutput.setBorder(null);
        scrollAreaOutput.setViewportView(areaOutput);

        panelNorth.add(scrollAreaOutput, java.awt.BorderLayout.CENTER);

        panelPrincipal.add(panelNorth);

        panelMiddle.setBackground(new java.awt.Color(0, 0, 0));

        labelGif.setFont(new java.awt.Font("Verdana Pro Cond Semibold", 1, 24)); // NOI18N
        labelGif.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        labelGif.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);

        javax.swing.GroupLayout panelMiddleLayout = new javax.swing.GroupLayout(panelMiddle);
        panelMiddle.setLayout(panelMiddleLayout);
        panelMiddleLayout.setHorizontalGroup(
            panelMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelMiddleLayout.createSequentialGroup()
                .addContainerGap(375, Short.MAX_VALUE)
                .addComponent(labelGif, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(371, 371, 371))
        );
        panelMiddleLayout.setVerticalGroup(
            panelMiddleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labelGif, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
        );

        panelPrincipal.add(panelMiddle);

        textImput.setPreferredSize(new java.awt.Dimension(531, 113));
        textImput.setVerifyInputWhenFocusTarget(false);
        textImput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                textImputKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout panelInputLayout = new javax.swing.GroupLayout(panelInput);
        panelInput.setLayout(panelInputLayout);
        panelInputLayout.setHorizontalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(149, 149, 149)
                .addComponent(textImput, javax.swing.GroupLayout.DEFAULT_SIZE, 805, Short.MAX_VALUE)
                .addGap(150, 150, 150))
        );
        panelInputLayout.setVerticalGroup(
            panelInputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelInputLayout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(textImput, javax.swing.GroupLayout.DEFAULT_SIZE, 99, Short.MAX_VALUE)
                .addGap(49, 49, 49))
        );

        panelPrincipal.add(panelInput);
        panelInput.getAccessibleContext().setAccessibleName("");

        getContentPane().add(panelPrincipal, java.awt.BorderLayout.CENTER);

        menuBar.setBorder(null);

        menuStory.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.black, java.awt.Color.black));
        menuStory.setText("Story Maker");
        menuStory.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        menuLogin.setText("Login");
        menuLogin.setToolTipText("login or register");
        menuLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLogin(evt);
            }
        });
        menuStory.add(menuLogin);

        menuNew.setText("New");
        menuNew.setToolTipText("create new story");
        menuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNew(evt);
            }
        });
        menuStory.add(menuNew);

        menuLoad.setText("Load");
        menuLoad.setToolTipText("load story from server");
        menuLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuLoad(evt);
            }
        });
        menuStory.add(menuLoad);

        menuScore.setText("Score");
        menuScore.setToolTipText("watch the score of the stories ");
        menuScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuScore(evt);
            }
        });
        menuStory.add(menuScore);

        menuBar.add(menuStory);

        menuSettings.setText("Settings");

        menuCheckMusic.setSelected(true);
        menuCheckMusic.setText("Music");
        menuCheckMusic.setToolTipText("turn on/off music ");
        menuCheckMusic.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                menuCheckMusicItemStateChanged(evt);
            }
        });
        menuSettings.add(menuCheckMusic);

        menuCheckAnimation.setSelected(true);
        menuCheckAnimation.setText("Animation");
        menuCheckAnimation.setToolTipText("turn on/off the gif in the story");
        menuSettings.add(menuCheckAnimation);

        menuBar.add(menuSettings);

        menuAbout.setText("About");
        menuAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                menuAbout(evt);
            }
        });
        menuBar.add(menuAbout);

        setJMenuBar(menuBar);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void menuNew(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNew

        frameNewStory.setVisible(true);

        //set the label empty
        enabledLevelText();
        enabledStoryText();


    }//GEN-LAST:event_menuNew

    private void menuLoad(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLoad
        // shows the menu of selectable stories and requests the stories from the server

        if (!login.isIsLogin()) {
            JOptionPane.showMessageDialog(frameNewStory, "login is required.", "error", JOptionPane.ERROR_MESSAGE);
        } else {
            labelSelectAuthor.setText("");
            labelSelectTitle.setText("");
            textSelectDescr.setText("");
            labelSelectScore.setText("");
            labelSelectDate.setText("");
            DefaultListModel listModel = new DefaultListModel();
            Client client = new Client();

            this.storyList = client.getStoryList(); //requests information from available stories
            if (!storyList.getStory().isEmpty()) {
                List<String> listTitle = new ArrayList<>();
                for (int i = 0; i < storyList.getStory().size(); i++) {
                    listTitle.add(storyList.getStory().get(i).getTitle());
                }
                Utilities.twoSortStr(listTitle, storyList); //sorts the first and the second parameter based on the first
                for (int i = 0; i < storyList.getStory().size(); i++) {
                    listModel.addElement(listTitle.get(i));
                }
                listSelectStory.setModel(listModel);
                frameSelectStory.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(frameSelectStory, "no story to play", "error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_menuLoad

    private void menuScore(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuScore
        // shows the menu of score and requests the score from the server

        if (!login.isIsLogin()) {
            JOptionPane.showMessageDialog(frameNewStory, "login is required.", "error", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultListModel listModelTitle = new DefaultListModel();
            DefaultListModel listModelScore = new DefaultListModel();
            Client client = new Client();

            this.storyList = client.getStoryList();
            if (!storyList.getStory().isEmpty()) {
                List<Double> listScore = new ArrayList<>();

                for (int i = 0; i < storyList.getStory().size(); i++) {
                    listScore.add(storyList.getStory().get(i).getScoreAvg());
                }
                storyList = Utilities.twoSortDou(listScore, storyList); // sorts the first and the second parameter based on the first
                for (int i = 0; i < storyList.getStory().size(); i++) {
                    listModelScore.addElement(listScore.get(i));
                    listModelTitle.addElement(storyList.getStory().get(i).getTitle());
                }
                jList2.setModel(listModelTitle);
                jList3.setModel(listModelScore);
                dialogScore.setVisible(true);
                dialogScore.setLocationRelativeTo(null);

            } else {
                JOptionPane.showMessageDialog(dialogScore, "no score of stories", "error", JOptionPane.ERROR_MESSAGE);
            }

        }
    }//GEN-LAST:event_menuScore

    private void confirmStoryButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmStoryButton
        // when confirm the story created

        if (textTitle.getText().isEmpty() || textStoryDescr.getText().isEmpty()) {
            JOptionPane.showMessageDialog(frameNewStory, "it is mandatory to enter the name of the story and the description of the story.", "failed insertion", JOptionPane.WARNING_MESSAGE);
        } else {
            if (this.levelSelector.getLevel().isEmpty()) {
                JOptionPane.showMessageDialog(frameNewStory, "it is mandatory to enter at least one level.", "failed insertion", JOptionPane.WARNING_MESSAGE);

            } else {

                if (checkStoryOnline.isSelected()) {
                    if (!login.isIsLogin()) {
                        JOptionPane.showMessageDialog(frameNewStory, "you are not sign-in.", "failed insertion", JOptionPane.ERROR_MESSAGE);
                    } else {
                        Client client = new Client();

                        if (client.send(new Story(login.getId(), this.levelSelector.getLevel(), textTitle.getText(), textStoryDescr.getText()))) { // the user id is send for take the email from database and send email conferm
                            this.storyBuilder.setStoryTitle(textTitle.getText());
                            this.storyBuilder.setStoryDescription(textStoryDescr.getText());
                            textTitle.setText("");
                            textStoryDescr.setText("");
                            frameNewStory.dispose();
                            textImput.setFocusable(true);
                            this.storyBuilder.config(this.levelSelector.getLevel(), areaOutput, labelGif, menuCheckAnimation);
                            this.storySelected = false; //when the story is not selected from server
                        } else {
                            JOptionPane.showMessageDialog(frameNewStory, "", "failed insertion", JOptionPane.ERROR_MESSAGE);
                        }

                    }
                } else {
                    this.storyBuilder.setStoryTitle(textTitle.getText());
                    this.storyBuilder.setStoryDescription(textStoryDescr.getText());
                    frameNewStory.dispose();
                    textImput.setFocusable(true);
                    this.exit = false;
                    this.storyBuilder.config(this.levelSelector.getLevel(), areaOutput, labelGif, menuCheckAnimation);
                    this.storySelected = false;
                }
            }
        }

    }//GEN-LAST:event_confirmStoryButton


    private void addRoomButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRoomButton
        // this method is called every time a room is entered.
        // checks if the fields are entered correctly and finally inserts the room.

        if (textRoomName.getText().isBlank() || textRoomDescr.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "it is mandatory to enter the name of the room and the description of the room.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if (!textCharName.getText().isBlank() && textCharName.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the character insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if (textCharName.getText().isBlank() && !textCharName.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the character insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if (!textObjActName.getText().isBlank() && textObjActDescr.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the object active insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if (textObjActName.getText().isBlank() && !textObjActDescr.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the object active insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if (!textObjPsvName.getText().isBlank() && (textObjPsvDescr.getText().isBlank() || textObjPsvCmdAlias.getText().isBlank())) {
            JOptionPane.showMessageDialog(frameNewStory, "the object passive insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if ((textObjPsvName.getText().isBlank() || textObjPsvCmdAlias.getText().isBlank()) && !textObjPsvDescr.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the object passive insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        } else if ((textObjPsvName.getText().isBlank() || textObjPsvDescr.getText().isBlank()) && !textObjPsvCmdAlias.getText().isBlank()) {
            JOptionPane.showMessageDialog(frameNewStory, "the object passive insertion is not complete.", "failed insertion", JOptionPane.WARNING_MESSAGE);

        }else {  // this method create the room
            this.levelSelector.init(textRoomName.getText(), textRoomDescr.getText(), textCharName.getText(), textCharDescr.getText(), textObjActName.getText(), textObjActDescr.getText(), textObjActAlias.getText(), textObjPsvName.getText(), textObjPsvDescr.getText(), textObjPsvAlias.getText(), textObjPsvCmdAlias.getText());

            enabledLevelText(); // erase the text

        }

    }//GEN-LAST:event_addRoomButton

    private void textImputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textImputKeyPressed
        // this method is called every time a input key is pressed on the text input

        if (!storyBuilder.isDescrFinish() && evt.getKeyCode() == KeyEvent.VK_ENTER) { //first time enter here
            this.storyBuilder.setDescrFinish(true);
            storyBuilder.printRoom();

        } else if (storyBuilder.isDescrFinish() && evt.getKeyCode() == KeyEvent.VK_ENTER && !textImput.getText().equals("") && exit == false) {
            this.exit = this.storyBuilder.game(textImput.getText()); // executes the command in the game and return true if the command close the game 

            textImput.setText("");
        } else if (exit == true && !menuCheckAnimation.isSelected() && evt.getKeyCode() == KeyEvent.VK_ENTER) { // when you don't want the gif and you must press enter
            areaOutput.setText("");
            textImput.setFocusable(false);
            this.levelSelector = new LevelSelector();
            this.storyBuilder = new StoryBuilder();
            this.exit = false;
            if (storySelected == true && login.isIsLogin()) { // start insert score frame
                dialogSelectScore.setVisible(true);
                dialogSelectScore.setLocationRelativeTo(null);

            }
        }
        if (exit == true && menuCheckAnimation.isSelected()) { // when you want the gif
            areaOutput.setText("");
            textImput.setFocusable(false);
            this.levelSelector = new LevelSelector();
            this.storyBuilder = new StoryBuilder();
            this.exit = false;
            if (storySelected == true && login.isIsLogin()) {
                dialogSelectScore.setVisible(true);
                dialogSelectScore.setLocationRelativeTo(null);

            }
        }

    }//GEN-LAST:event_textImputKeyPressed

    private void loginOkButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginOkButton
        // for the login frame

        if (!labelEmail.isVisible() && !textEmail.isVisible()) {   // for sign-in

            Client client = new Client();
            User log = new User(textUsername.getText(), String.valueOf(textPassword.getPassword()));
            log = client.signIn(log);
            if (log.isIsLogin()) {
                JOptionPane.showMessageDialog(frameLogin, "login successful", "information", JOptionPane.INFORMATION_MESSAGE);
                this.login = log;
                login.setIsLogin(true);
                labelLogout.setText("<HTML><U>Logout</U>: " + login.getUsername() + "</HTML>");
                labelLogout.setVisible(true);
                frameLogin.dispose();

            } else {
                JOptionPane.showMessageDialog(frameLogin, "login not done correctly", "failed insertion", JOptionPane.ERROR_MESSAGE);
            }

        } else {  // for sign-up

            Client client = new Client();
            User login = new User(textUsername.getText(), String.valueOf(textPassword.getPassword()), textEmail.getText());
            if (client.signUp(login)) {
                textUsername.setText("");
                textEmail.setText("");
                textPassword.setText("");
                JOptionPane.showMessageDialog(frameLogin, "registration successful", "information", JOptionPane.INFORMATION_MESSAGE);
                frameLogin.dispose();

            } else {
                JOptionPane.showMessageDialog(frameLogin, "registration not done correctly", "failed insertion", JOptionPane.ERROR_MESSAGE);
            }
        }
        textUsername.setText("");
        textEmail.setText("");
        textPassword.setText("");
    }//GEN-LAST:event_loginOkButton

    private void storySelectedConfirm(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storySelectedConfirm
        //when confirm a selected story from server

        this.storyId = listSelectStory.getSelectedIndex(); // this is import for send a value of the score when the story ends
        Client client = new Client();

        System.out.println("id" + storyList.getStory().get(storyId).getId());
        Story story = client.getStory(storyList.getStory().get(storyId).getId()); // request story to server
        if (!story.isEmpty()) {

            this.storyBuilder = new StoryBuilder();
            storyBuilder.setStoryTitle(story.getTitle());
            storyBuilder.setStoryDescription(story.getDescription());
            storyBuilder.config(story.getStory(), areaOutput, labelGif, menuCheckAnimation); // start the configuration to start playing

        } else {
            JOptionPane.showMessageDialog(frameLogin, "error to load a story", "failed insertion", JOptionPane.ERROR_MESSAGE);
        }

        textImput.setFocusable(true);
        this.exit = false;
        this.storySelected = true; // if it is true, insert score appears
        frameSelectStory.dispose();
    }//GEN-LAST:event_storySelectedConfirm

    private void storySortedTitle(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storySortedTitle
        // for the title sort button in the select story

        List<String> listTitle = new ArrayList<>();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listTitle.add(storyList.getStory().get(i).getTitle());
        }
        Utilities.twoSortStr(listTitle, storyList); // sorts the first and the second parameter based on the first
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listModel.addElement(listTitle.get(i));
        }
        listSelectStory.setModel(listModel);

    }//GEN-LAST:event_storySortedTitle

    private void storySortedAuthor(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storySortedAuthor
        // for the author sort button in the select story

        List<String> listAuthor = new ArrayList<>();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listAuthor.add(storyList.getStory().get(i).getUsername());
        }
        Utilities.twoSortStr(listAuthor, storyList); // sorts the first and the second parameter based on the first
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listModel.addElement(listAuthor.get(i));
        }
        listSelectStory.setModel(listModel);
    }//GEN-LAST:event_storySortedAuthor

    private void storySortedScore(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storySortedScore
        // for the score sort button in the select story

        List<Double> listScore = new ArrayList<>();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listScore.add(storyList.getStory().get(i).getScoreAvg());
        }
        Utilities.twoSortDou(listScore, storyList); // sorts the first and the second parameter based on the first
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listModel.addElement(storyList.getStory().get(i).getScoreAvg());
        }
        listSelectStory.setModel(listModel);
    }//GEN-LAST:event_storySortedScore

    private void storySortedDate(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_storySortedDate
        // for the date sort button in the select story

        List<String> listDate = new ArrayList<>();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listDate.add(storyList.getStory().get(i).getDate().toString());
        }
        Utilities.twoSortStrReverse(listDate, storyList); // sorts the first and the second parameter based on the first
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < storyList.getStory().size(); i++) {
            listModel.addElement(listDate.get(i));
        }
        listSelectStory.setModel(listModel);
    }//GEN-LAST:event_storySortedDate

    private void scoreValueButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scoreValueButton
        // send the score to server

        if (jSlider1.getValue() != 0) {
            Client client = new Client();
            client.sendScore(new Story(storyList.getStory().get(storyId).getId(), jSlider1.getValue()));
        }
        dialogSelectScore.dispose();
    }//GEN-LAST:event_scoreValueButton

    private void storyListSelected(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_storyListSelected
        // when a story is selected the information is printed

        if (listSelectStory.getSelectedIndex() >= 0) {
            labelSelectAuthor.setText(storyList.getStory().get(listSelectStory.getSelectedIndex()).getUsername());
            labelSelectTitle.setText(storyList.getStory().get(listSelectStory.getSelectedIndex()).getTitle());
            textSelectDescr.setText(storyList.getStory().get(listSelectStory.getSelectedIndex()).getDescription());
            labelSelectScore.setText(String.valueOf(storyList.getStory().get(listSelectStory.getSelectedIndex()).getScoreAvg()));
            labelSelectDate.setText(storyList.getStory().get(listSelectStory.getSelectedIndex()).getDate().toString());
        }

    }//GEN-LAST:event_storyListSelected

    private void menuLogin(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuLogin
        // set frame login visible
        labelLogin.setText("LOGIN");
        frameLogin.setVisible(true);
        labelEmail.setVisible(false);
        textEmail.setVisible(false);
    }//GEN-LAST:event_menuLogin

    private void menuAbout(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_menuAbout
        // set dialog about visible
        dialogAbout.setVisible(true);
    }//GEN-LAST:event_menuAbout

    private void logoutClick(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutClick
        // when logout is selected
        this.login = new User();
        labelLogout.setText("");
        labelLogout.setVisible(false);
    }//GEN-LAST:event_logoutClick

    private void loginSwitchButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_loginSwitchButton
        // when the button is selected to switch from sign-in to signi-up

        textUsername.setText("");
        textEmail.setText("");
        textPassword.setText("");
        if (labelEmail.isVisible() && textEmail.isVisible()) { // for the sign-in
            labelEmail.setVisible(false);
            textEmail.setVisible(false);
            labelSign.setText("<HTML><U>SIGN-UP</U></HTML>");
            labelLogin.setText("LOGIN");
        } else { // for the sign-up
            labelEmail.setVisible(true);
            textEmail.setVisible(true);
            labelSign.setText("<HTML><U>SIGN-IN</U></HTML>");
            labelLogin.setText("REGISTER");

        }


    }//GEN-LAST:event_loginSwitchButton

    private void menuCheckMusicItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_menuCheckMusicItemStateChanged
        // when the music check-box is selected

        if (menuCheckMusic.isSelected() && !music.isPlay())
            music.play();
        else if (!menuCheckMusic.isSelected() && music.isPlay())
            music.stop();
    }//GEN-LAST:event_menuCheckMusicItemStateChanged
    private void enabledLevelText() {
        textRoomName.setText("");
        textRoomDescr.setText("");
        textCharName.setText("");
        textCharDescr.setText("");
        textObjActName.setText("");
        textObjActDescr.setText("");
        textObjActAlias.setText("");
        textObjPsvName.setText("");
        textObjPsvDescr.setText("");
        textObjPsvAlias.setText("");
        textObjPsvCmdAlias.setText("");

    }

    private void enabledStoryText() {
        textTitle.setText("");
        textStoryDescr.setText("");
        checkStoryOnline.setSelected(false); // don't start the selecttion of score

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ui().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaOutput;
    private javax.swing.JButton buttonAddRoom;
    private javax.swing.JButton buttonConfirmStory;
    private javax.swing.JButton buttonLogin;
    private javax.swing.JButton buttonSelectStory;
    private javax.swing.JCheckBox checkStoryOnline;
    private javax.swing.JDialog dialogAbout;
    private javax.swing.JDialog dialogScore;
    private javax.swing.JDialog dialogSelectScore;
    private javax.swing.JFrame frameLogin;
    private javax.swing.JFrame frameNewStory;
    private javax.swing.JFrame frameSelectStory;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JList<String> jList2;
    private javax.swing.JList<String> jList3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JLabel labelCharDescr;
    private javax.swing.JLabel labelCharName;
    private javax.swing.JLabel labelEmail;
    private javax.swing.JLabel labelGif;
    private javax.swing.JLabel labelIntro;
    private javax.swing.JLabel labelLogin;
    private javax.swing.JLabel labelLogout;
    private javax.swing.JLabel labelObjActAlias;
    private javax.swing.JLabel labelObjActDescr;
    private javax.swing.JLabel labelObjActName;
    private javax.swing.JLabel labelObjPsvAlias;
    private javax.swing.JLabel labelObjPsvCmdAlias;
    private javax.swing.JLabel labelObjPsvDescr;
    private javax.swing.JLabel labelObjPsvName;
    private javax.swing.JLabel labelPassword;
    private javax.swing.JLabel labelRoomDescr;
    private javax.swing.JLabel labelRoomName;
    private javax.swing.JLabel labelScore;
    private javax.swing.JLabel labelSelectAuthor;
    private javax.swing.JLabel labelSelectDate;
    private javax.swing.JLabel labelSelectScore;
    private javax.swing.JLabel labelSelectStory;
    private javax.swing.JLabel labelSelectTitle;
    private javax.swing.JLabel labelSign;
    private javax.swing.JLabel labelStoryDescr;
    private javax.swing.JLabel labelStoryOnline;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelUsername;
    private javax.swing.JLabel labelViewAuthor;
    private javax.swing.JLabel labelViewDate;
    private javax.swing.JLabel labelViewDescr;
    private javax.swing.JLabel labelViewScore;
    private javax.swing.JLabel labelviewTitle;
    private javax.swing.JList<String> listSelectStory;
    private javax.swing.JMenu menuAbout;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JCheckBoxMenuItem menuCheckAnimation;
    private javax.swing.JCheckBoxMenuItem menuCheckMusic;
    private javax.swing.JMenuItem menuLoad;
    private javax.swing.JMenuItem menuLogin;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuScore;
    private javax.swing.JMenu menuSettings;
    private javax.swing.JMenu menuStory;
    private javax.swing.JPanel panelInput;
    private javax.swing.JPanel panelLogout;
    private javax.swing.JPanel panelMiddle;
    private javax.swing.JPanel panelNorth;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelSelectStory;
    private javax.swing.JPanel panelViewSelectStory;
    private javax.swing.JScrollPane scrollAreaOutput;
    private javax.swing.JScrollPane scrollLabelIntro;
    private javax.swing.JScrollPane scrollTextObjPsvDescr;
    private javax.swing.JScrollPane scrollTextStoryDescr;
    private javax.swing.JPanel tabDescription;
    private javax.swing.JPanel tabIntro;
    private javax.swing.JPanel tabLevel;
    private javax.swing.JTabbedPane tabPanelNew;
    private javax.swing.JTextArea textCharDescr;
    private javax.swing.JTextField textCharName;
    private javax.swing.JTextField textEmail;
    private javax.swing.JTextField textImput;
    private javax.swing.JTextArea textNewStoryIntro;
    private javax.swing.JTextField textObjActAlias;
    private javax.swing.JTextArea textObjActDescr;
    private javax.swing.JTextField textObjActName;
    private javax.swing.JTextField textObjPsvAlias;
    private javax.swing.JTextField textObjPsvCmdAlias;
    private javax.swing.JTextArea textObjPsvDescr;
    private javax.swing.JTextField textObjPsvName;
    private javax.swing.JPasswordField textPassword;
    private javax.swing.JTextArea textRoomDescr;
    private javax.swing.JTextField textRoomName;
    private javax.swing.JTextArea textSelectDescr;
    private javax.swing.JTextArea textStoryDescr;
    private javax.swing.JTextField textTitle;
    private javax.swing.JTextField textUsername;
    // End of variables declaration//GEN-END:variables
}
